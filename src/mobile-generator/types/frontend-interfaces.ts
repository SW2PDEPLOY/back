/**
 * üìã Interfaces TypeScript para Frontend - Mobile Generator
 * 
 * Copia este archivo a tu proyecto frontend para tener tipado completo
 */

// ==========================================
// üÜï NUEVO ENDPOINT: from-prompt
// ==========================================

/**
 * Request para crear aplicaci√≥n desde prompt
 */
export interface CreateFromPromptRequest {
  /** Descripci√≥n de la aplicaci√≥n (requerido) */
  prompt: string;
  
  /** Nombre de la aplicaci√≥n (opcional - se genera autom√°ticamente) */
  nombre?: string;
  
  /** Tipo de proyecto (opcional - default: flutter) */
  project_type?: ProjectType;
  
  /** Configuraci√≥n adicional (opcional) */
  config?: ProjectConfig;
}

/**
 * Response de creaci√≥n desde prompt
 */
export interface CreateFromPromptResponse {
  /** UUID de la aplicaci√≥n creada */
  id: string;
  
  /** Nombre de la aplicaci√≥n */
  nombre: string;
  
  /** Prompt ENRIQUECIDO autom√°ticamente por la IA */
  prompt: string;
  
  /** Tipo de proyecto */
  project_type: ProjectType;
  
  /** Configuraci√≥n del proyecto */
  config?: ProjectConfig;
  
  /** ID del usuario propietario */
  user_id: string;
  
  /** Fecha de creaci√≥n */
  createdAt: string;
  
  /** Fecha de √∫ltima actualizaci√≥n */
  updatedAt: string;
}

// ==========================================
// üìÑ ENDPOINT EXISTENTE: XML/mockup  
// ==========================================

/**
 * Request para crear aplicaci√≥n desde XML/mockup (EXISTENTE)
 */
export interface CreateFromXmlRequest {
  /** Contenido XML del mockup (opcional) */
  xml?: string;
  
  /** Prompt adicional (opcional) */
  prompt?: string;
  
  /** ID del mockup de referencia (opcional) */
  mockup_id?: string;
  
  /** Nombre de la aplicaci√≥n (opcional) */
  nombre?: string;
  
  /** Tipo de proyecto (opcional) */
  project_type?: ProjectType;
  
  /** Configuraci√≥n adicional (opcional) */
  config?: ProjectConfig;
}

/**
 * Response de creaci√≥n desde XML/mockup
 */
export interface CreateFromXmlResponse {
  id: string;
  nombre: string;
  xml?: string;
  prompt?: string;
  mockup_id?: string;
  project_type: ProjectType;
  config?: ProjectConfig;
  user_id: string;
  createdAt: string;
  updatedAt: string;
}

// ==========================================
// üîÑ TIPOS COMPARTIDOS
// ==========================================

/**
 * Tipos de proyecto soportados
 */
export type ProjectType = 'flutter' | 'angular';

/**
 * Configuraci√≥n del proyecto
 */
export interface ProjectConfig {
  /** Nombre del paquete (ej: com.empresa.app) */
  package_name?: string;
  
  /** Versi√≥n de la aplicaci√≥n */
  version?: string;
  
  /** Descripci√≥n corta */
  description?: string;
  
  /** Caracter√≠sticas espec√≠ficas */
  features?: string[];
  
  /** Tema de la aplicaci√≥n */
  theme?: string;
}

/**
 * Aplicaci√≥n m√≥vil (response general)
 */
export interface MobileApp {
  id: string;
  nombre: string;
  xml?: string;
  prompt?: string;
  mockup_id?: string;
  project_type: ProjectType;
  config?: ProjectConfig;
  user_id: string;
  createdAt: string;
  updatedAt: string;
}

/**
 * Request para actualizar aplicaci√≥n
 */
export interface UpdateMobileAppRequest {
  nombre?: string;
  xml?: string;
  prompt?: string;
  mockup_id?: string;
  project_type?: ProjectType;
  config?: ProjectConfig;
}

// ==========================================
// üõ†Ô∏è UTILIDADES FRONTEND
// ==========================================

/**
 * Estados de la aplicaci√≥n frontend
 */
export interface AppState {
  /** Est√° creando la aplicaci√≥n */
  creando: boolean;
  
  /** Est√° generando el proyecto */
  generando: boolean;
  
  /** Error actual (null si no hay error) */
  error: string | null;
  
  /** Aplicaci√≥n actual */
  app: MobileApp | null;
}

/**
 * Configuraci√≥n de endpoints
 */
export interface ApiEndpoints {
  /** Crear desde XML/mockup */
  crearDesdeXml: string;
  
  /** Crear desde prompt */
  crearDesdePrompt: string;
  
  /** Generar proyecto */
  generar: (id: string) => string;
  
  /** Listar aplicaciones */
  listar: string;
  
  /** Obtener aplicaci√≥n espec√≠fica */
  obtener: (id: string) => string;
  
  /** Actualizar aplicaci√≥n */
  actualizar: (id: string) => string;
  
  /** Eliminar aplicaci√≥n */
  eliminar: (id: string) => string;
}

/**
 * Errores de validaci√≥n
 */
export interface ValidationErrors {
  prompt?: string;
  nombre?: string;
  xml?: string;
  mockup_id?: string;
  config?: string;
}

/**
 * Ejemplos de prompts por categor√≠a
 */
export interface PromptExamples {
  basicos: string[];
  detallados: string[];
  porDominio: {
    [domain: string]: string[];
  };
}

// ==========================================
// üéØ CONSTANTES √öTILES
// ==========================================

export const PROJECT_TYPES: ProjectType[] = ['flutter', 'angular'];

export const DEFAULT_PROJECT_TYPE: ProjectType = 'flutter';

export const PROMPT_MIN_LENGTH = 10;
export const PROMPT_MAX_LENGTH = 2000;
export const NOMBRE_MAX_LENGTH = 50;

export const EJEMPLO_PROMPTS: PromptExamples = {
  basicos: [
    "crea una app m√≥vil de gesti√≥n contable",
    "crea una app de delivery de comida", 
    "crea una app de citas m√©dicas",
    "crea una app escolar para estudiantes",
    "crea una app de gimnasio y fitness"
  ],
  detallados: [
    "crea una aplicaci√≥n m√≥vil de gesti√≥n contable con login, formularios de transacciones, reportes financieros, dashboard con gr√°ficos y categorizaci√≥n de gastos",
    "crea una app de delivery con cat√°logo de restaurantes, carrito de compras, tracking en tiempo real, m√©todos de pago y sistema de ratings"
  ],
  porDominio: {
    finanzas: [
      "app de gesti√≥n contable",
      "app de control de gastos personales",
      "app de inversiones y portfolio"
    ],
    salud: [
      "app de citas m√©dicas",
      "app de seguimiento de medicamentos",
      "app de fitness y nutrici√≥n"
    ],
    educacion: [
      "app escolar para estudiantes",
      "app de cursos online",
      "app de gesti√≥n universitaria"
    ]
  }
};

// ==========================================
// üîß HELPER FUNCTIONS TYPE
// ==========================================

/**
 * Funci√≥n para crear aplicaci√≥n desde prompt
 */
export type CreateFromPromptFunction = (
  request: CreateFromPromptRequest
) => Promise<CreateFromPromptResponse>;

/**
 * Funci√≥n para crear aplicaci√≥n desde XML
 */
export type CreateFromXmlFunction = (
  request: CreateFromXmlRequest  
) => Promise<CreateFromXmlResponse>;

/**
 * Funci√≥n para generar proyecto
 */
export type GenerateProjectFunction = (
  appId: string
) => Promise<Blob>;

/**
 * Funci√≥n para validar formulario de prompt
 */
export type ValidatePromptFunction = (
  data: Partial<CreateFromPromptRequest>
) => ValidationErrors; 